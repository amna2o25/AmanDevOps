name: üåê Full CI/CD Pipeline with Tests, Split Envs, Monitoring & Scalability

on:
  push:
    branches:
      - main

jobs:
  phpunit:
    name: üß™ Run PHPUnit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install Dependencies
        run: composer install
      - name: Run Tests
        run: vendor/bin/phpunit

  deploy-staging:
    name: üöÄ Deploy to Staging via FTP
    runs-on: ubuntu-latest
    needs: phpunit
    steps:
      - uses: actions/checkout@v4
      - name: üìÇ Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-staging:
    name: üå°Ô∏è Health Check - Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Check Staging Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://digitalwhiz.co.uk/L5SW/Amna/")
          echo "Health check HTTP status: $STATUS"
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Staging health check failed!"
            exit 1
          else
            echo "‚úÖ Staging is healthy!"
          fi

  load-test:
    name: ‚ö° Load Testing with k6
    runs-on: ubuntu-latest
    needs: health-check-staging
    steps:
      - name: Install k6
        run: |
          sudo apt install -y gnupg software-properties-common
          sudo add-apt-repository ppa:loadimpact/k6
          sudo apt update
          sudo apt install -y k6
      - name: Run load test
        run: |
          echo 'import http from "k6/http"; export default function () { http.get("https://digitalwhiz.co.uk/L5SW/Amna/"); }' > test.js
          k6 run --duration 10s --vus 5 test.js

  approve-production:
    name: ‚úÖ Manual Approval
    runs-on: ubuntu-latest
    needs: load-test
    steps:
      - name: Wait for Manual Approval
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: üöÄ Deploy to Production via FTP
    runs-on: ubuntu-latest
    needs: approve-production
    steps:
      - uses: actions/checkout@v4
      - name: üìÇ Upload to FTP (Prod)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-prod:
    name: üå°Ô∏è Health Check - Production
    runs-on: ubuntu-latest
    needs: deploy-production
    steps:
      - name: Check Production Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://digitalwhiz.co.uk/L5SW/Amna/")
          echo "Health check HTTP status: $STATUS"
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Production health check failed!"
            exit 1
          else
            echo "‚úÖ Production is healthy!"
          fi
