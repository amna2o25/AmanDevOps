name: 🌐 Full CI/CD + IaC + Monitoring + Scalability

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🚀 Deploy Website via FTP
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📂 Upload Files via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check:
    name: 🩺 Staging Health Check
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: 🔍 Check Health
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://digitalwhiz.co.uk/L5SW/Amna/home.php)
          if [ "$STATUS" -ne 200 ]; then
            echo "❌ Health check failed! Status: $STATUS"
            exit 1
          fi
          echo "✅ Health check passed!"

  mock-infra:
    name: ⚙️ Simulated Terraform Apply (IaC)
    runs-on: ubuntu-latest
    steps:
      - name: 🧱 Pretend Infra Deploy
        run: echo 'Pretending to deploy infrastructure with Terraform...'

  load-test:
    name: ⚡ Load Test with k6
    runs-on: ubuntu-latest
    needs: health-check
    steps:
      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg2 curl
          curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update && sudo apt-get install -y k6

      - name: Run Load Test
        run: |
          echo 'import http from "k6/http"; export default function () { http.get("https://digitalwhiz.co.uk/L5SW/Amna/home.php"); }' > test.js
          k6 run --vus 10 --duration 10s test.js
