name: üîÑ Full CI/CD Pipeline with Tests, Split Envs, Monitoring & Scalability

on:
  push:
    branches:
      - main

jobs:
  phpunit-tests:
    name: ‚úÖ Run PHPUnit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
      - name: Install dependencies
        run: composer install
      - name: Run tests
        run: vendor/bin/phpunit tests

  deploy-staging:
    name: üöÄ Deploy to Staging via FTP
    runs-on: ubuntu-latest
    needs: phpunit-tests
    steps:
      - uses: actions/checkout@v4
      - name: üìÇ Upload to Staging via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-staging:
    name: üîç Health Check - Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Check Staging Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://digitalwhiz.co.uk/L5SW/Amna/")
          if [ $STATUS -ne 200 ]; then
            echo "‚ùå Staging health check failed!"
            exit 1
          fi
          echo "‚úÖ Staging is healthy."

  load-test:
    name: ‚ö° Load Testing with k6
    runs-on: ubuntu-latest
    needs: health-check-staging
    steps:
      - name: ‚úÖ Install k6 (official method)
        run: |
          curl -sL https://github.com/grafana/k6/releases/latest/download/k6-v0.47.0-linux-amd64.tar.gz -o k6.tar.gz
          tar -xzf k6.tar.gz
          sudo mv k6-v0.47.0-linux-amd64/k6 /usr/local/bin/
          k6 version
      - name: üöÄ Run load test
        run: |
          echo 'import http from "k6/http"; export default function () { http.get("https://digitalwhiz.co.uk/L5SW/Amna/"); }' > test.js
          k6 run --duration 10s --vus 5 test.js

  approval:
    name: ‚úÖ Manual Approval
    runs-on: ubuntu-latest
    needs: load-test
    steps:
      - name: Await Approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: üöÄ Deploy to Production via FTP
    runs-on: ubuntu-latest
    needs: approval
    steps:
      - uses: actions/checkout@v4
      - name: üìÇ Upload to Production
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/  # change this path if production is different

  health-check-production:
    name: üîç Health Check - Production
    runs-on: ubuntu-latest
    needs: deploy-production
    steps:
      - name: Check Production Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://digitalwhiz.co.uk/L5SW/Amna/")
          if [ $STATUS -ne 200 ]; then
            echo "‚ùå Production health check failed!"
            exit 1
          fi
          echo "‚úÖ Production is healthy."
