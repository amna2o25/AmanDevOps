name: üîÅ Full CI/CD with Tests, Split Envs, Monitoring & Scalability

on:
  push:
    branches:
      - main

jobs:
  test:
    name: üß™ Run PHPUnit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer, phpunit

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run PHPUnit
        run: vendor/bin/phpunit --configuration phpunit.xml

  deploy-staging:
    name: üöÄ Deploy to Staging via FTP
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: üìÇ Upload to Staging
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-staging:
    name: ‚úÖ Health Check - Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Check if Staging is Live
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' https://digitalwhiz.co.uk/L5SW/Amna/)
          if [ "$STATUS" -ne 200 ]; then
            echo "‚ùå Staging health check failed"; exit 1; fi

  load-test:
    name: ‚ö° Load Testing with k6
    runs-on: ubuntu-latest
    needs: health-check-staging
    steps:
      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg2 curl
          curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update && sudo apt-get install -y k6

      - name: Run Load Test
        run: |
          echo "import http from 'k6/http'; export default function () { http.get('https://digitalwhiz.co.uk/L5SW/Amna/'); }" > test.js
          k6 run test.js

  manual-approval:
    name: üëÄ Manual Approval
    runs-on: ubuntu-latest
    needs: load-test
    environment:
      name: production
      url: https://digitalwhiz.co.uk/L5SW/Amna/
    steps:
      - name: Await manual approval
        run: echo "Waiting for manual approval"

  deploy-production:
    name: üöÄ Deploy to Production
    runs-on: ubuntu-latest
    needs: manual-approval
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: üìÇ Upload to Production
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-production:
    name: ‚úÖ Health Check - Production
    runs-on: ubuntu-latest
    needs: deploy-production
    steps:
      - name: Check Production is Live
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' https://digitalwhiz.co.uk/L5SW/Amna/)
          if [ "$STATUS" -ne 200 ]; then
            echo "‚ùå Production health check failed"; exit 1; fi
