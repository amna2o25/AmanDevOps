name: üåê Full CI/CD Pipeline with FTP, Health Checks, and Load Testing

on:
  push:
    branches: [main]

env:
  STAGING_URL: https://digitalwhiz.co.uk/L5SW/Amna/
  PROD_URL: https://digitalwhiz.co.uk/L5SW/Amna/
  FTP_SERVER: digitalwhiz.co.uk
  FTP_USERNAME: alwhizco
  FTP_PASSWORD: Asdbnm@123455432$$$$
  FTP_DIR: /public_html/L5SW/Amna/

jobs:
  phpunit:
    name: ‚úÖ Run PHPUnit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer, phpunit

      - name: Install Composer Dependencies
        run: composer install --no-interaction

      - name: Run PHPUnit
        run: vendor/bin/phpunit

  deploy-staging:
    name: üöÄ Deploy to Staging via FTP
    runs-on: ubuntu-latest
    needs: phpunit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload to Staging
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ env.FTP_SERVER }}
          username: ${{ env.FTP_USERNAME }}
          password: ${{ env.FTP_PASSWORD }}
          server-dir: ${{ env.FTP_DIR }}

  health-check-staging:
    name: üîé Health Check - Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Check Staging Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "${{ env.STAGING_URL }}/health")
          if [ "$STATUS" -ne 200 ]; then
            echo "‚ùå Staging health check failed!"; exit 1; fi

  load-test:
    name: ‚ö° Load Testing with k6
    runs-on: ubuntu-latest
    needs: health-check-staging
    steps:
      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg2
          curl -s https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update && sudo apt-get install -y k6

      - name: Run Load Test
        run: |
          echo "import http from 'k6/http'; export default function () { http.get('${{ env.STAGING_URL }}'); }" > test.js
          k6 run --vus 10 --duration 20s test.js

  approval:
    name: ‚è∏ Manual Approval
    runs-on: ubuntu-latest
    needs: load-test
    environment:
      name: production
      url: ${{ env.PROD_URL }}
    steps:
      - name: Wait for approval
        run: echo "üü¢ Awaiting manual approval..."

  deploy-production:
    name: üöÄ Deploy to Production via FTP
    runs-on: ubuntu-latest
    needs: approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload to Production
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ env.FTP_SERVER }}
          username: ${{ env.FTP_USERNAME }}
          password: ${{ env.FTP_PASSWORD }}
          server-dir: ${{ env.FTP_DIR }}

  health-check-prod:
    name: ‚úÖ Health Check - Production
    runs-on: ubuntu-latest
    needs: deploy-production
    steps:
      - name: Check Production Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "${{ env.PROD_URL }}/health")
          if [ "$STATUS" -ne 200 ]; then
            echo "‚ùå Production health check failed!"; exit 1; fi
