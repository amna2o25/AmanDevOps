name: ðŸš€ Full CI/CD Pipeline with Tests, Split Envs, Monitoring & Scalability

on:
  push:
    branches:
      - main

jobs:
  phpunit-tests:
    name: âœ… Run PHPUnit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Run PHPUnit
        run: ./vendor/bin/phpunit --testdox

  deploy-staging:
    name: ðŸš€ Deploy to Staging via FTP
    runs-on: ubuntu-latest
    needs: phpunit-tests
    steps:
      - uses: actions/checkout@v4
      - name: ðŸ“‚ Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-staging:
    name: ðŸ©º Health Check - Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Check Staging Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://digitalwhiz.co.uk/L5SW/Amna/")
          if [ "$STATUS" != "200" ]; then
            echo "Staging health check failed!"
            exit 1
          fi

  load-test:
    name: âš¡ Load Testing with k6
    runs-on: ubuntu-latest
    needs: health-check-staging
    steps:
      - name: âœ… Install k6 via APT
        run: |
          sudo apt update
          sudo apt install gnupg software-properties-common -y
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://packages.grafana.com/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/grafana.gpg
          echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://packages.grafana.com/oss/deb stable main" | sudo tee /etc/apt/sources.list.d/grafana.list
          sudo apt update
          sudo apt install k6 -y
          k6 version

      - name: ðŸš€ Run load test
        run: |
          echo 'import http from "k6/http"; export default function () { http.get("https://digitalwhiz.co.uk/L5SW/Amna/"); }' > test.js
          k6 run --duration 10s --vus 5 test.js

  manual-approval:
    name: âœ… Manual Approval
    runs-on: ubuntu-latest
    needs: load-test
    steps:
      - name: Await manual approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: ðŸš€ Deploy to Production via FTP
    runs-on: ubuntu-latest
    needs: manual-approval
    steps:
      - uses: actions/checkout@v4
      - name: ðŸ“‚ Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/L5SW/Amna/

  health-check-production:
    name: ðŸ©º Health Check - Production
    runs-on: ubuntu-latest
    needs: deploy-production
    steps:
      - name: Check Production Health
        run: |
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://digitalwhiz.co.uk/L5SW/Amna/")
          if [ "$STATUS" != "200" ]; then
            echo "Production health check failed!"
            exit 1
          fi
